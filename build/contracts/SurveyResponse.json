{
  "contractName": "SurveyResponse",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSurveyResponseReceiptList",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "from",
          "type": "address"
        },
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_maximumCount",
          "type": "uint256"
        },
        {
          "name": "_startedAt",
          "type": "uint256"
        },
        {
          "name": "_questionCount",
          "type": "uint8"
        }
      ],
      "name": "requestSurvey",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFoundationDonateReceiptList",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_receiptId",
          "type": "uint256"
        }
      ],
      "name": "getReceiptDetail",
      "outputs": [
        {
          "name": "",
          "type": "uint8"
        },
        {
          "name": "",
          "type": "uint8"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "address"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getProductBuyReceiptList",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_surveyId",
          "type": "uint256"
        }
      ],
      "name": "getSurveyRequestDetail",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint256"
        },
        {
          "name": "",
          "type": "uint8"
        },
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwnerReceiptList",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFoundationRequestReceiptList",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "faucet",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSurveySellReceiptList",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "consumeBalanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_surveyId",
          "type": "uint256"
        }
      ],
      "name": "isBuyableSurvey",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "spender",
          "type": "address"
        },
        {
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getProductSellReceiptList",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "to",
          "type": "address"
        },
        {
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSurveyRequestReceiptList",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getSurveyBuyReceiptList",
      "outputs": [
        {
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "developerAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_surveyId",
          "type": "uint256"
        },
        {
          "name": "_account",
          "type": "address"
        }
      ],
      "name": "isSurveyToBuyer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        },
        {
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "PRICE_PER_QUESTION",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newDeveloperAddress",
          "type": "address"
        }
      ],
      "name": "setDeveloper",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "surveyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "ResponseSurvey",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "surveyId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BuyerAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "surveyId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "name": "account",
          "type": "address"
        }
      ],
      "name": "BuyerRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "surveyId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "CreateSurvey",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "receiptId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "CreateReceipt",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "foundationId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "CreateFoundation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "productId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "CreateProduct",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_surveyId",
          "type": "uint256"
        }
      ],
      "name": "responseSurvey",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.0+commit.1d4f565a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSurveyResponseReceiptList\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_maximumCount\",\"type\":\"uint256\"},{\"name\":\"_startedAt\",\"type\":\"uint256\"},{\"name\":\"_questionCount\",\"type\":\"uint8\"}],\"name\":\"requestSurvey\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFoundationDonateReceiptList\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_receiptId\",\"type\":\"uint256\"}],\"name\":\"getReceiptDetail\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getProductBuyReceiptList\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_surveyId\",\"type\":\"uint256\"}],\"name\":\"getSurveyRequestDetail\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint256\"},{\"name\":\"\",\"type\":\"uint8\"},{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getOwnerReceiptList\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getFoundationRequestReceiptList\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"faucet\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSurveySellReceiptList\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"consumeBalanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_surveyId\",\"type\":\"uint256\"}],\"name\":\"isBuyableSurvey\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getProductSellReceiptList\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSurveyRequestReceiptList\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getSurveyBuyReceiptList\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"developerAddress\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_surveyId\",\"type\":\"uint256\"},{\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"isSurveyToBuyer\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"owner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PRICE_PER_QUESTION\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_surveyId\",\"type\":\"uint256\"}],\"name\":\"responseSurvey\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newDeveloperAddress\",\"type\":\"address\"}],\"name\":\"setDeveloper\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"surveyId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"ResponseSurvey\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"surveyId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"BuyerAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"surveyId\",\"type\":\"uint256\"},{\"indexed\":true,\"name\":\"account\",\"type\":\"address\"}],\"name\":\"BuyerRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"surveyId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"CreateSurvey\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"receiptId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"CreateReceipt\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"foundationId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"CreateFoundation\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"productId\",\"type\":\"uint256\"},{\"indexed\":false,\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"CreateProduct\",\"type\":\"event\"}],\"devdoc\":{\"methods\":{\"getFoundationDonateReceiptList()\":{\"details\":\"\\ub0b4\\uac00 \\uae30\\ubd80\\ud55c \\uae30\\ubd80 \\uc601\\uc218\\uc99d\\uc758 Index List \\ubc18\\ud658 (\\uc18c\\ubaa8) \"},\"getFoundationRequestReceiptList()\":{\"details\":\"\\ub0b4\\uac00 \\ub4f1\\ub85d\\ud55c \\uae30\\ubd80 \\ub2e8\\uccb4 \\uc601\\uc218\\uc99d\\uc758 Index List \\ubc18\\ud658 \"},\"getOwnerReceiptList()\":{\"details\":\"\\ubaa8\\ub4e0 \\uc124\\ubb38 \\uc601\\uc218\\uc99d\\uc758 Index List \\ubc18\\ud658 \"},\"getProductBuyReceiptList()\":{\"details\":\"\\ub0b4\\uac00 \\uad6c\\ub9e4\\ud55c \\uc0c1\\ud488 \\uc601\\uc218\\uc99d\\uc758 \\uc0c1\\ud488 Index List \\ubc18\\ud658 \"},\"getProductSellReceiptList()\":{\"details\":\"\\ub0b4\\uac00 \\ud310\\ub9e4\\ud55c \\uc0c1\\ud488 \\uc601\\uc218\\uc99d\\uc758 Index List \\ubc18\\ud658 \"},\"getReceiptDetail(uint256)\":{\"details\":\"Index\\uc5d0 \\ud574\\ub2f9\\ud558\\ub294 \\uc601\\uc218\\uc99d \\uc0c1\\uc138\\uc815\\ubcf4 \\ubc18\\ud658\\r\",\"params\":{\"_receiptId\":\"\\uc601\\uc218\\uc99d IndexId\\r\"},\"return\":\"ReceiptTitle uint256 enum \\uc778\\ub371\\uc2a4 \\ubc18\\ud658. \\uc124\\ubb38\\uc778\\uc9c0, \\uc0c1\\ud488\\uc778\\uc9c0\\rReceiptMethod uint256 enum \\uc778\\ub371\\uc2a4 \\ubc18\\ud658, \\uc694\\uccad, \\uad6c\\ub9e4 \\ub4f1..\\rto address \\ub204\\uad6c\\uc5d0\\uac8c\\rfrom address \\ub204\\uad6c\\ub85c\\ubd80\\ud130\\robjectId uint256 \\uc5b4\\ub5a4 \\uc624\\ube0c\\uc81d\\ud2b8\\ub97c?\\rtotal uint256 \\ucd1d \\uae08\\uc561\\rdate uint256 \\uc0dd\\uc131 \\ub0a0\\uc9dc\\r\"},\"getSurveyBuyReceiptList()\":{\"details\":\"\\ub0b4\\uac00 \\uad6c\\ub9e4\\ud55c \\uc124\\ubb38 \\uc601\\uc218\\uc99d\\uc758 Index List \\ubc18\\ud658 (\\uc18c\\ubaa8) \"},\"getSurveyRequestDetail(uint256)\":{\"details\":\"\\uc124\\ubb38 \\uc870\\uc0ac \\uc0c1\\uc138 \\uc815\\ubcf4 \\ubc18\\ud658\\r\",\"params\":{\"_surveyId\":\"\\ube14\\ub85d\\uccb4\\uc778 Sotrage\\uc5d0 \\uc800\\uc7a5\\ub41c \\uc124\\ubb38 \\uc870\\uc0ac \\uc778\\ub371\\uc2a4\\r\"},\"return\":\"A uint256 \\ub4f1\\ub85d \\uc124\\ubb38 \\ub9ac\\uc2a4\\ud2b8\\uc758 DB primary key \\ubc18\\ud658 \\r\"},\"getSurveyRequestReceiptList()\":{\"details\":\"\\ub0b4\\uac00 \\uc694\\uccad\\ud55c \\uc124\\ubb38 \\uc601\\uc218\\uc99d\\uc758 Index List \\ubc18\\ud658 (\\uc18c\\ubaa8) \"},\"getSurveyResponseReceiptList()\":{\"details\":\"\\ub0b4\\uac00 \\uc751\\ub2f5\\ud55c \\uc124\\ubb38 \\uc601\\uc218\\uc99d\\uc758 Index List \\ubc18\\ud658 (\\uc801\\ub9bd) \"},\"getSurveySellReceiptList()\":{\"details\":\"\\ub0b4\\uac00 \\ud310\\ub9e4\\ud55c \\uc124\\ubb38 \\uc601\\uc218\\uc99d\\uc758 Index List \\ubc18\\ud658 (\\uc801\\ub9bd) \"},\"requestSurvey(uint256,uint256,uint8)\":{\"details\":\"create Survey(public)\\r _CreateProduct() \\uc2e4\\ud589\\ud568\\r \\uc124\\ubb38 \\uac00\\uaca9 \\uacc4\\uc0b0 \\ud6c4 \\ud574\\ub2f9 \\uae08\\uc561 \\ub9cc\\ud07c\\uc758 \\ud1a0\\ud070 \\uc804\\uc1a1\\uc744 \\uc2dc\\ub3c4\\r \\uc131\\uacf5 \\uc2dc \\uc2a4\\ud1a0\\ub9ac\\uc9c0\\uc5d0 \\ub4f1\\ub85d\\r \\uc2e4\\ud328 \\uc2dc false \\ub9ac\\ud134 \\r\",\"params\":{\"_maximumCount\":\"\\uc124\\ubb38 \\ucd5c\\ub300 \\uc751\\ub2f5 \\uac00\\ub2a5 \\uc778\\uc6d0 \\uc218.\\r\",\"_questionCount\":\"\\uc124\\ubb38 \\uc9c8\\ubb38 \\uac1c\\uc218.\\r\",\"_startedAt\":\"\\uc124\\ubb38 \\uc9c8\\ubb38 \\uac1c\\uc218.\\r\"},\"return\":\"A bool \\uc131\\uacf5 \\uc5ec\\ubd80 \\ubc18\\ud658 \\r\"}}},\"userdoc\":{\"methods\":{\"allowance(address,address)\":{\"notice\":\"\\ud1a0\\ud070 \\uc18c\\uc720\\uc790\\uac00 \\ud1a0\\ud070 \\uc218\\uc2e0\\uc790\\uc5d0\\uac8c \\uc778\\ucd9c\\uc744 \\ud5c8\\ub77d\\ud55c \\ud1a0\\ud070\\uc774 \\uc5bc\\ub9c8\\uc778\\uc9c0\\ub97c \\ubc18\\ud658\"},\"approve(address,uint256)\":{\"notice\":\"\\uc1a1\\uc2e0\\uc790\\uac00 \\ubcf4\\uc720\\ud55c \\ud1a0\\ud070\\uc5d0\\uc11c \\uc77c\\uc815 \\uae08\\uc561 \\ub9cc\\ud07c\\uc758 \\ud1a0\\ud070\\uc744 \\uc778\\ucd9c\\ud560 \\uc218 \\uc788\\ub294 \\uad8c\\ud55c\\uc744 \\uc218\\uc2e0\\uc790\\uc5d0\\uac8c \\ubd80\\uc5ec\"},\"balanceOf(address)\":{\"notice\":\"\\ud1a0\\ud070 \\uc18c\\uc720 \\uac2f\\uc218\"},\"consumeBalanceOf(address)\":{\"notice\":\"\\ud1a0\\ud070 \\uc18c\\uc720 \\uac2f\\uc218\"},\"decreaseAllowance(address,uint256)\":{\"notice\":\"\\ud5c8\\uac00\\ub41c \\uc1a1\\uc2e0 \\uae08\\uc561\\uc911 \\uc6d0\\ud558\\ub294 \\uae08\\uc561\\ub9cc\\ud07c \\uac10\\uc18c\"},\"increaseAllowance(address,uint256)\":{\"notice\":\"\\ud5c8\\uac00\\ub41c \\uc1a1\\uc2e0 \\uae08\\uc561\\uc911 \\uc6d0\\ud558\\ub294 \\uae08\\uc561\\ub9cc\\ud07c \\ucd94\\uac00\"},\"isSurveyToBuyer(uint256,address)\":{\"notice\":\"*  SURVEY ROLE **\"},\"totalSupply()\":{\"notice\":\"\\ud1a0\\ud070 \\ucd1d \\ubc1c\\ud589\\ub7c9\"},\"transfer(address,uint256)\":{\"notice\":\"\\uc1a1\\uc2e0\\uc790 \\uacc4\\uc815\\uc5d0\\uc11c \\uc218\\uc2e0\\uc790 \\uacc4\\uc815\\uc5d0\\uac8c \\ud1a0\\ud070 \\uc1a1\\uc2e0\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"\\uc1a1\\uc2e0\\uc790 account\\uc5d0\\uc11c \\ud574\\ub2f9 \\uae08\\uc561 \\ub9cc\\ud07c\\uc758 \\ud1a0\\ud070\\uc744 \\uc778\\ucd9c\\ud574\\uc11c \\uc218\\uc2e0\\uc790 \\uc5b4\\uce74\\uc6b4\\ud2b8\\ub85c \\ud574\\ub2f9 \\uae08\\uc561 \\ub9cc\\ud07c\\uc758 \\ud1a0\\ud070\\uc744 \\uc1a1\\uc2e0\"}}}},\"settings\":{\"compilationTarget\":{\"/mnt/c/workspace/inosurvey-ethereum/contracts/SurveyResponse.sol\":\"SurveyResponse\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/mnt/c/workspace/inosurvey-ethereum/contracts/StandardToken.sol\":{\"keccak256\":\"0xea4a92da51a8fff6f3460d544b36b64cc392e01bcdfaf3361d162304396c39f9\",\"urls\":[\"bzzr://17f2df9ad98cc20a697fb919e695cf41a943731128e0a0d3f9f8ba1a4cbdc705\"]},\"/mnt/c/workspace/inosurvey-ethereum/contracts/SurveyAccessControl.sol\":{\"keccak256\":\"0x239beaa23f573b400bd035ea9e1c5993bc8fbec95a2751486027dd6286ad21c7\",\"urls\":[\"bzzr://f5d70267b28ec486b053228cb9e5a8937a659fd1e8c3bc24006c4b8cca86f8a9\"]},\"/mnt/c/workspace/inosurvey-ethereum/contracts/SurveyBase.sol\":{\"keccak256\":\"0xcbd6311e8fbbedfe363ff6b68a438521965472d5bbac6495424d87aae7eeb274\",\"urls\":[\"bzzr://14952bc8bf75ad63c73591d050951b6ef9dd89528818020f5657bcb2a9fd8995\"]},\"/mnt/c/workspace/inosurvey-ethereum/contracts/SurveyOwnership.sol\":{\"keccak256\":\"0x3db17ae2955f490709c54e7ece31d034399632e9e459ee414bde0c768e7e201e\",\"urls\":[\"bzzr://4bc1231e27f5c52ed98166e905ebfff84404ee38842d32d4655003546e5851c9\"]},\"/mnt/c/workspace/inosurvey-ethereum/contracts/SurveyRequest.sol\":{\"keccak256\":\"0xbcc4b8259bb57804c7b98760fb37cf1b3590006b73af147555ca154dfe403505\",\"urls\":[\"bzzr://825f7f434d8106dad377255cad2c0de7c337bf5f80dd2683af289f9b564e2d55\"]},\"/mnt/c/workspace/inosurvey-ethereum/contracts/SurveyResponse.sol\":{\"keccak256\":\"0x179d4bfae09616afeabf262aab63b5c76ac0b27b59782472e9009fd5fdd37cbd\",\"urls\":[\"bzzr://7815ce1cd47778a1524b1196d622353f2468377aaf6e1f14a300382ec9b726e0\"]},\"/mnt/c/workspace/inosurvey-ethereum/contracts/SurveyWallet.sol\":{\"keccak256\":\"0x998ea619ba387b856400ebce3ef45bfa73a50abded0b4f630e6cfe4a13084b29\",\"urls\":[\"bzzr://aabab706f5e3153d6485f143e31a2b76e168fc016e0dbea612743c88416c7f1d\"]},\"/mnt/c/workspace/inosurvey-ethereum/node_modules/openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0x659ba0f9a3392cd50a8a5fafaf5dfd8c6a0878f6a4613bceff4e90dceddcd865\",\"urls\":[\"bzzr://f704341d520fbc98716541f1b3f67737f0ee6e94adf072a66acb2bd25d593c2b\"]},\"/mnt/c/workspace/inosurvey-ethereum/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x965012d27b4262d7a41f5028cbb30c51ebd9ecd4be8fb30380aaa7a3c64fbc8b\",\"urls\":[\"bzzr://41ca38f6b0fa4b77b0feec43e422cfbec48b7eb38a41edf0b85c77e8d9a296b1\"]},\"/mnt/c/workspace/inosurvey-ethereum/node_modules/openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x079c4e23ee448f529e43bfa3c4e8fb4be52cd0318ee923a276835bedf45b93d8\",\"urls\":[\"bzzr://48248e86f64407a95f241d6c5c8cfea6b4d4ebf4ebb467e5c98c8af3868fafe4\"]}},\"version\":1}",
  "bytecode": "0x608060405260008060146101000a81548160ff0219169083151502179055506040805190810160405280600781526020017f494e4f434f494e00000000000000000000000000000000000000000000000000815250601990805190602001906200006b929190620000ea565b506012601a60006101000a81548160ff021916908360ff1602179055506040805190810160405280600381526020017f494e430000000000000000000000000000000000000000000000000000000000815250601b9080519060200190620000d5929190620000ea565b50348015620000e357600080fd5b5062000199565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200012d57805160ff19168380011785556200015e565b828001600101855582156200015e579182015b828111156200015d57825182559160200191906001019062000140565b5b5090506200016d919062000171565b5090565b6200019691905b808211156200019257600081600090555060010162000178565b5090565b90565b613aea80620001a96000396000f3fe6080604052600436106101ac576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101b1578063095ea7b31461024157806318160ddd146102b45780631f6a0d25146102df57806323b872dd1461034b578063282f162b146103de578063313ce56714610444578063385a44f81461047557806339509351146104e15780633f4ba83a1461055457806354128fa11461056b57806357b2c03c146106585780635c975abb146106c45780636b945e78146106f35780636dfa06421461077d57806370a08231146107e95780637809aada1461084e5780637b56c2b2146108ba578063834849d21461092d5780638456cb591461099957806387a29c28146109b057806395d89b4114610a15578063a11842ff14610aa5578063a457c2d714610af8578063a6c16e6c14610b6b578063a9059cbb14610bd7578063b84a540f14610c4a578063c7c700b714610cb6578063caccd7f714610d22578063d455419314610d79578063dd62ed3e14610dec578063de906fed14610e71578063f03e818114610e9c578063ff70fa4914610eeb575b600080fd5b3480156101bd57600080fd5b506101c6610f3c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102065780820151818401526020810190506101eb565b50505050905090810190601f1680156102335780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561024d57600080fd5b5061029a6004803603604081101561026457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fde565b604051808215151515815260200191505060405180910390f35b3480156102c057600080fd5b506102c961110b565b6040518082815260200191505060405180910390f35b3480156102eb57600080fd5b506102f4611115565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561033757808201518184015260208101905061031c565b505050509050019250505060405180910390f35b34801561035757600080fd5b506103c46004803603606081101561036e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111aa565b604051808215151515815260200191505060405180910390f35b3480156103ea57600080fd5b5061042e6004803603606081101561040157600080fd5b810190808035906020019092919080359060200190929190803560ff1690602001909291905050506113b2565b6040518082815260200191505060405180910390f35b34801561045057600080fd5b50610459611461565b604051808260ff1660ff16815260200191505060405180910390f35b34801561048157600080fd5b5061048a611478565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156104cd5780820151818401526020810190506104b2565b505050509050019250505060405180910390f35b3480156104ed57600080fd5b5061053a6004803603604081101561050457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061150d565b604051808215151515815260200191505060405180910390f35b34801561056057600080fd5b50610569611744565b005b34801561057757600080fd5b506105a46004803603602081101561058e57600080fd5b81019080803590602001909291905050506118a8565b604051808860028111156105b457fe5b60ff1681526020018760058111156105c857fe5b60ff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200197505050505050505060405180910390f35b34801561066457600080fd5b5061066d611a7c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156106b0578082015181840152602081019050610695565b505050509050019250505060405180910390f35b3480156106d057600080fd5b506106d9611b11565b604051808215151515815260200191505060405180910390f35b3480156106ff57600080fd5b5061072c6004803603602081101561071657600080fd5b8101908080359060200190929190505050611b24565b604051808981526020018881526020018781526020018681526020018581526020018481526020018360ff1660ff168152602001821515151581526020019850505050505050505060405180910390f35b34801561078957600080fd5b50610792611c1c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107d55780820151818401526020810190506107ba565b505050509050019250505060405180910390f35b3480156107f557600080fd5b506108386004803603602081101561080c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cb1565b6040518082815260200191505060405180910390f35b34801561085a57600080fd5b50610863611cfa565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108a657808201518184015260208101905061088b565b505050509050019250505060405180910390f35b3480156108c657600080fd5b50610913600480360360408110156108dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611d8f565b604051808215151515815260200191505060405180910390f35b34801561093957600080fd5b50610942611e69565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561098557808201518184015260208101905061096a565b505050509050019250505060405180910390f35b3480156109a557600080fd5b506109ae611efe565b005b3480156109bc57600080fd5b506109ff600480360360208110156109d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612064565b6040518082815260200191505060405180910390f35b348015610a2157600080fd5b50610a2a6120ad565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a6a578082015181840152602081019050610a4f565b50505050905090810190601f168015610a975780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610ab157600080fd5b50610ade60048036036020811015610ac857600080fd5b810190808035906020019092919050505061214f565b604051808215151515815260200191505060405180910390f35b348015610b0457600080fd5b50610b5160048036036040811015610b1b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612186565b604051808215151515815260200191505060405180910390f35b348015610b7757600080fd5b50610b806123bd565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610bc3578082015181840152602081019050610ba8565b505050509050019250505060405180910390f35b348015610be357600080fd5b50610c3060048036036040811015610bfa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612452565b604051808215151515815260200191505060405180910390f35b348015610c5657600080fd5b50610c5f612469565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610ca2578082015181840152602081019050610c87565b505050509050019250505060405180910390f35b348015610cc257600080fd5b50610ccb6124fe565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610d0e578082015181840152602081019050610cf3565b505050509050019250505060405180910390f35b348015610d2e57600080fd5b50610d37612593565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610d8557600080fd5b50610dd260048036036040811015610d9c57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125b8565b604051808215151515815260200191505060405180910390f35b348015610df857600080fd5b50610e5b60048036036040811015610e0f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125e7565b6040518082815260200191505060405180910390f35b348015610e7d57600080fd5b50610e8661266e565b6040518082815260200191505060405180910390f35b348015610ea857600080fd5b50610ed560048036036020811015610ebf57600080fd5b8101908080359060200190929190505050612673565b6040518082815260200191505060405180910390f35b348015610ef757600080fd5b50610f3a60048036036020811015610f0e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061277f565b005b606060198054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fd45780601f10610fa957610100808354040283529160200191610fd4565b820191906000526020600020905b815481529060010190602001808311610fb757829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561101b57600080fd5b81601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000601854905090565b6060600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156111a057602002820191906000526020600020905b81548152602001906001019080831161118c575b5050505050905090565b600061123b82601760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461292b90919063ffffffff16565b601760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112c684848461294d565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600190509392505050565b60008084600a8460ff160202905060006064605083028115156113d157fe5b04905060006064605088848115156113e557fe5b04028115156113f057fe5b04905060006113fe84612c1b565b905061140b838503612c31565b508015611455576000611427846000858c60008d8d6000612c68565b90506114338133612e35565b60006114456000803033868a8f612e43565b905080965050505050505061145a565b600080fd5b9392505050565b6000601a60009054906101000a900460ff16905090565b6060601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561150357602002820191906000526020600020905b8154815260200190600101908083116114ef575b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561154a57600080fd5b6115d982601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546136ab90919063ffffffff16565b601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f74204f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600060149054906101000a900460ff16151561188c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f6e6f74207061757365642e00000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060146101000a81548160ff021916908315150217905550565b6000806000806000806000873373ffffffffffffffffffffffffffffffffffffffff166006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561192157600080fd5b60028981548110151561193057fe5b906000526020600020906005020160000160009054906101000a900460ff1660028a81548110151561195e57fe5b906000526020600020906005020160000160019054906101000a900460ff1660028b81548110151561198c57fe5b906000526020600020906005020160000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660028c8154811015156119cd57fe5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660028d815481101515611a0e57fe5b90600052602060002090600502016002015460028e815481101515611a2f57fe5b90600052602060002090600502016003015460028f815481101515611a5057fe5b906000526020600020906005020160040154975097509750975097509750975050919395979092949650565b6060601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611b0757602002820191906000526020600020905b815481526020019060010190808311611af3575b5050505050905090565b600060149054906101000a900460ff1681565b600080600080600080600080611b386139f3565b60018a815481101515611b4757fe5b906000526020600020906007020161010060405190810160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1660ff1660ff1681526020016006820160019054906101000a900460ff1615151515815250509050806000015181602001518260400151836060015184608001518560a001518660c001518760e001519850985098509850985098509850985050919395975091939597565b6060600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611ca757602002820191906000526020600020905b815481526020019060010190808311611c93575b5050505050905090565b6000601660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611d8557602002820191906000526020600020905b815481526020019060010190808311611d71575b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e55576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f74204f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b611e5f83836136cc565b6001905092915050565b6060600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611ef457602002820191906000526020600020905b815481526020019060010190808311611ee0575b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611fc2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f74204f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600060149054906101000a900460ff16151515612047576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f616c7265616479207061757365642e000000000000000000000000000000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff021916908315150217905550565b6000601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060601b8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121455780601f1061211a57610100808354040283529160200191612145565b820191906000526020600020905b81548152906001019060200180831161212857829003601f168201915b5050505050905090565b600060018281548110151561216057fe5b906000526020600020906007020160060160019054906101000a900460ff169050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156121c357600080fd5b61225282601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461292b90919063ffffffff16565b601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6060601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561244857602002820191906000526020600020905b815481526020019060010190808311612434575b5050505050905090565b600061245f33848461294d565b6001905092915050565b6060600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156124f457602002820191906000526020600020905b8154815260200190600101908083116124e0575b5050505050905090565b6060600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561258957602002820191906000526020600020905b815481526020019060010190808311612575575b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006125df826014600086815260200190815260200160002061382290919063ffffffff16565b905092915050565b6000601760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600a81565b60008061269f60018481548110151561268857fe5b9060005260206000209060070201600201546138b6565b90508015612775576001838154811015156126b657fe5b906000526020600020906007020160040160008154809291906001019190505550600061270a6000600133308860018a8154811015156126f257fe5b90600052602060002090600702016002015442612e43565b90507f82819c0188b934397683935664e911078968eee7be8134d9027bbcbbb807bab38460018681548110151561273d57fe5b906000526020600020906007020160020154604051808381526020018281526020019250505060405180910390a1809250505061277a565b600080fd5b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612843576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f74204f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156128e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260078152602001807f5761726e696e670000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115151561293c57600080fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156129f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6275726e2061646472657373212121000000000000000000000000000000000081525060200191505060405180910390fd5b612a4481601660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461292b90919063ffffffff16565b601660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612ad981601660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546136ab90919063ffffffff16565b601660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612b6e81601560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546136ab90919063ffffffff16565b601560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000612c2833308461294d565b60019050919050565b6000612c5f306000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168461294d565b60019050919050565b6000612c726139f3565b610100604051908101604052808b81526020018a81526020018981526020018881526020018781526020018681526020018560ff168152602001841515815250905060006001808390806001815401808255809150509060018203906000526020600020906007020160009091929091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff021916908360ff16021790555060e08201518160060160016101000a81548160ff0219169083151502179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fecc279af01ecc1616810552807a41a6dcbad8eb3a91a33626b2d35c9dfd5c2d58133604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1809250505098975050505050505050565b612e3f82826138cc565b5050565b6000612e4d613a3e565b60e0604051908101604052808a6002811115612e6557fe5b8152602001896005811115612e7657fe5b81526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff168152602001868152602001858152602001848152509050600060016002839080600181540180825580915050906001820390600052602060002090600502016000909192909190915060008201518160000160006101000a81548160ff02191690836002811115612f1b57fe5b021790555060208201518160000160016101000a81548160ff02191690836005811115612f4457fe5b021790555060408201518160000160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816002015560a0820151816003015560c082015181600401555050039050336006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550600060028111156130c257fe5b8a60028111156130ce57fe5b14156133a257600060058111156130e157fe5b8960058111156130ed57fe5b141561316157600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505090600182039060005260206000200160009091929091909150555061339d565b6001600581111561316e57fe5b89600581111561317a57fe5b14156131ee57600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505090600182039060005260206000200160009091929091909150555061339c565b600360058111156131fb57fe5b89600581111561320757fe5b141561327b57600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505090600182039060005260206000200160009091929091909150555061339b565b6004600581111561328857fe5b89600581111561329457fe5b141561330857600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505090600182039060005260206000200160009091929091909150555061339a565b60058081111561331457fe5b89600581111561332057fe5b141561339457600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550613399565b600080fd5b5b5b5b5b613630565b600160028111156133af57fe5b8a60028111156133bb57fe5b14156134e657600060058111156133ce57fe5b8960058111156133da57fe5b141561344e57601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055506134e1565b6002600581111561345b57fe5b89600581111561346757fe5b14156134db57601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055506134e0565b600080fd5b5b61362f565b6002808111156134f257fe5b8a60028111156134fe57fe5b1415613629576003600581111561351157fe5b89600581111561351d57fe5b141561359157601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550613624565b6004600581111561359e57fe5b8960058111156135aa57fe5b141561361e57601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550613623565b600080fd5b5b61362e565b600080fd5b5b5b7f648ea8614c7f2c919bde3b01694291faae3d403522f45d971755f2ac0e2faa598133604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a18092505050979650505050505050565b60008082840190508381101515156136c257600080fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561370857600080fd5b61371d816018546136ab90919063ffffffff16565b60188190555061377581601660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546136ab90919063ffffffff16565b601660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561385f57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006138c330338461294d565b60019050919050565b6138f1816014600085815260200190815260200160002061394390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fd28f937e71e8a89ddbefb8937335b2ae03fb74ce63dd6a6f316724c5a7e6c3dc836040518082815260200191505060405180910390a25050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561397f57600080fd5b6139898282613822565b15151561399557600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61010060405190810160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600060ff1681526020016000151581525090565b60e06040519081016040528060006002811115613a5757fe5b815260200160006005811115613a6957fe5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152509056fea165627a7a723058207d00040780529511a1ae166713fd3ecd1cafe3c2345e85ea29c2d56caac07e600029",
  "deployedBytecode": "0x6080604052600436106101ac576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff16806306fdde03146101b1578063095ea7b31461024157806318160ddd146102b45780631f6a0d25146102df57806323b872dd1461034b578063282f162b146103de578063313ce56714610444578063385a44f81461047557806339509351146104e15780633f4ba83a1461055457806354128fa11461056b57806357b2c03c146106585780635c975abb146106c45780636b945e78146106f35780636dfa06421461077d57806370a08231146107e95780637809aada1461084e5780637b56c2b2146108ba578063834849d21461092d5780638456cb591461099957806387a29c28146109b057806395d89b4114610a15578063a11842ff14610aa5578063a457c2d714610af8578063a6c16e6c14610b6b578063a9059cbb14610bd7578063b84a540f14610c4a578063c7c700b714610cb6578063caccd7f714610d22578063d455419314610d79578063dd62ed3e14610dec578063de906fed14610e71578063f03e818114610e9c578063ff70fa4914610eeb575b600080fd5b3480156101bd57600080fd5b506101c6610f3c565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156102065780820151818401526020810190506101eb565b50505050905090810190601f1680156102335780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561024d57600080fd5b5061029a6004803603604081101561026457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610fde565b604051808215151515815260200191505060405180910390f35b3480156102c057600080fd5b506102c961110b565b6040518082815260200191505060405180910390f35b3480156102eb57600080fd5b506102f4611115565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561033757808201518184015260208101905061031c565b505050509050019250505060405180910390f35b34801561035757600080fd5b506103c46004803603606081101561036e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506111aa565b604051808215151515815260200191505060405180910390f35b3480156103ea57600080fd5b5061042e6004803603606081101561040157600080fd5b810190808035906020019092919080359060200190929190803560ff1690602001909291905050506113b2565b6040518082815260200191505060405180910390f35b34801561045057600080fd5b50610459611461565b604051808260ff1660ff16815260200191505060405180910390f35b34801561048157600080fd5b5061048a611478565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156104cd5780820151818401526020810190506104b2565b505050509050019250505060405180910390f35b3480156104ed57600080fd5b5061053a6004803603604081101561050457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061150d565b604051808215151515815260200191505060405180910390f35b34801561056057600080fd5b50610569611744565b005b34801561057757600080fd5b506105a46004803603602081101561058e57600080fd5b81019080803590602001909291905050506118a8565b604051808860028111156105b457fe5b60ff1681526020018760058111156105c857fe5b60ff1681526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200197505050505050505060405180910390f35b34801561066457600080fd5b5061066d611a7c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156106b0578082015181840152602081019050610695565b505050509050019250505060405180910390f35b3480156106d057600080fd5b506106d9611b11565b604051808215151515815260200191505060405180910390f35b3480156106ff57600080fd5b5061072c6004803603602081101561071657600080fd5b8101908080359060200190929190505050611b24565b604051808981526020018881526020018781526020018681526020018581526020018481526020018360ff1660ff168152602001821515151581526020019850505050505050505060405180910390f35b34801561078957600080fd5b50610792611c1c565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156107d55780820151818401526020810190506107ba565b505050509050019250505060405180910390f35b3480156107f557600080fd5b506108386004803603602081101561080c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611cb1565b6040518082815260200191505060405180910390f35b34801561085a57600080fd5b50610863611cfa565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156108a657808201518184015260208101905061088b565b505050509050019250505060405180910390f35b3480156108c657600080fd5b50610913600480360360408110156108dd57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611d8f565b604051808215151515815260200191505060405180910390f35b34801561093957600080fd5b50610942611e69565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b8381101561098557808201518184015260208101905061096a565b505050509050019250505060405180910390f35b3480156109a557600080fd5b506109ae611efe565b005b3480156109bc57600080fd5b506109ff600480360360208110156109d357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612064565b6040518082815260200191505060405180910390f35b348015610a2157600080fd5b50610a2a6120ad565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610a6a578082015181840152602081019050610a4f565b50505050905090810190601f168015610a975780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b348015610ab157600080fd5b50610ade60048036036020811015610ac857600080fd5b810190808035906020019092919050505061214f565b604051808215151515815260200191505060405180910390f35b348015610b0457600080fd5b50610b5160048036036040811015610b1b57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612186565b604051808215151515815260200191505060405180910390f35b348015610b7757600080fd5b50610b806123bd565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610bc3578082015181840152602081019050610ba8565b505050509050019250505060405180910390f35b348015610be357600080fd5b50610c3060048036036040811015610bfa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612452565b604051808215151515815260200191505060405180910390f35b348015610c5657600080fd5b50610c5f612469565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610ca2578082015181840152602081019050610c87565b505050509050019250505060405180910390f35b348015610cc257600080fd5b50610ccb6124fe565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b83811015610d0e578082015181840152602081019050610cf3565b505050509050019250505060405180910390f35b348015610d2e57600080fd5b50610d37612593565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b348015610d8557600080fd5b50610dd260048036036040811015610d9c57600080fd5b8101908080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125b8565b604051808215151515815260200191505060405180910390f35b348015610df857600080fd5b50610e5b60048036036040811015610e0f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125e7565b6040518082815260200191505060405180910390f35b348015610e7d57600080fd5b50610e8661266e565b6040518082815260200191505060405180910390f35b348015610ea857600080fd5b50610ed560048036036020811015610ebf57600080fd5b8101908080359060200190929190505050612673565b6040518082815260200191505060405180910390f35b348015610ef757600080fd5b50610f3a60048036036020811015610f0e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919050505061277f565b005b606060198054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fd45780601f10610fa957610100808354040283529160200191610fd4565b820191906000526020600020905b815481529060010190602001808311610fb757829003601f168201915b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561101b57600080fd5b81601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925846040518082815260200191505060405180910390a36001905092915050565b6000601854905090565b6060600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156111a057602002820191906000526020600020905b81548152602001906001019080831161118c575b5050505050905090565b600061123b82601760008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461292b90919063ffffffff16565b601760008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506112c684848461294d565b3373ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601760008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a3600190509392505050565b60008084600a8460ff160202905060006064605083028115156113d157fe5b04905060006064605088848115156113e557fe5b04028115156113f057fe5b04905060006113fe84612c1b565b905061140b838503612c31565b508015611455576000611427846000858c60008d8d6000612c68565b90506114338133612e35565b60006114456000803033868a8f612e43565b905080965050505050505061145a565b600080fd5b9392505050565b6000601a60009054906101000a900460ff16905090565b6060601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561150357602002820191906000526020600020905b8154815260200190600101908083116114ef575b5050505050905090565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415151561154a57600080fd5b6115d982601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546136ab90919063ffffffff16565b601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611808576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f74204f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600060149054906101000a900460ff16151561188c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f6e6f74207061757365642e00000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060146101000a81548160ff021916908315150217905550565b6000806000806000806000873373ffffffffffffffffffffffffffffffffffffffff166006600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614151561192157600080fd5b60028981548110151561193057fe5b906000526020600020906005020160000160009054906101000a900460ff1660028a81548110151561195e57fe5b906000526020600020906005020160000160019054906101000a900460ff1660028b81548110151561198c57fe5b906000526020600020906005020160000160029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660028c8154811015156119cd57fe5b906000526020600020906005020160010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660028d815481101515611a0e57fe5b90600052602060002090600502016002015460028e815481101515611a2f57fe5b90600052602060002090600502016003015460028f815481101515611a5057fe5b906000526020600020906005020160040154975097509750975097509750975050919395979092949650565b6060601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611b0757602002820191906000526020600020905b815481526020019060010190808311611af3575b5050505050905090565b600060149054906101000a900460ff1681565b600080600080600080600080611b386139f3565b60018a815481101515611b4757fe5b906000526020600020906007020161010060405190810160405290816000820154815260200160018201548152602001600282015481526020016003820154815260200160048201548152602001600582015481526020016006820160009054906101000a900460ff1660ff1660ff1681526020016006820160019054906101000a900460ff1615151515815250509050806000015181602001518260400151836060015184608001518560a001518660c001518760e001519850985098509850985098509850985050919395975091939597565b6060600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611ca757602002820191906000526020600020905b815481526020019060010190808311611c93575b5050505050905090565b6000601660008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611d8557602002820191906000526020600020905b815481526020019060010190808311611d71575b5050505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611e55576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f74204f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b611e5f83836136cc565b6001905092915050565b6060600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020018280548015611ef457602002820191906000526020600020905b815481526020019060010190808311611ee0575b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515611fc2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f74204f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600060149054906101000a900460ff16151515612047576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f616c7265616479207061757365642e000000000000000000000000000000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff021916908315150217905550565b6000601560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060601b8054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156121455780601f1061211a57610100808354040283529160200191612145565b820191906000526020600020905b81548152906001019060200180831161212857829003601f168201915b5050505050905090565b600060018281548110151561216057fe5b906000526020600020906007020160060160019054906101000a900460ff169050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141515156121c357600080fd5b61225282601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461292b90919063ffffffff16565b601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925601760003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546040518082815260200191505060405180910390a36001905092915050565b6060601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561244857602002820191906000526020600020905b815481526020019060010190808311612434575b5050505050905090565b600061245f33848461294d565b6001905092915050565b6060600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054806020026020016040519081016040528092919081815260200182805480156124f457602002820191906000526020600020905b8154815260200190600101908083116124e0575b5050505050905090565b6060600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561258957602002820191906000526020600020905b815481526020019060010190808311612575575b5050505050905090565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006125df826014600086815260200190815260200160002061382290919063ffffffff16565b905092915050565b6000601760008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600a81565b60008061269f60018481548110151561268857fe5b9060005260206000209060070201600201546138b6565b90508015612775576001838154811015156126b657fe5b906000526020600020906007020160040160008154809291906001019190505550600061270a6000600133308860018a8154811015156126f257fe5b90600052602060002090600702016002015442612e43565b90507f82819c0188b934397683935664e911078968eee7be8134d9027bbcbbb807bab38460018681548110151561273d57fe5b906000526020600020906007020160020154604051808381526020018281526020019250505060405180910390a1809250505061277a565b600080fd5b919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141515612843576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260098152602001807f4e6f74204f776e6572000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141515156128e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260078152602001807f5761726e696e670000000000000000000000000000000000000000000000000081525060200191505060405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600082821115151561293c57600080fd5b600082840390508091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156129f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f6275726e2061646472657373212121000000000000000000000000000000000081525060200191505060405180910390fd5b612a4481601660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461292b90919063ffffffff16565b601660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612ad981601660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546136ab90919063ffffffff16565b601660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550612b6e81601560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546136ab90919063ffffffff16565b601560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000612c2833308461294d565b60019050919050565b6000612c5f306000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168461294d565b60019050919050565b6000612c726139f3565b610100604051908101604052808b81526020018a81526020018981526020018881526020018781526020018681526020018560ff168152602001841515815250905060006001808390806001815401808255809150509060018203906000526020600020906007020160009091929091909150600082015181600001556020820151816001015560408201518160020155606082015181600301556080820151816004015560a0820151816005015560c08201518160060160006101000a81548160ff021916908360ff16021790555060e08201518160060160016101000a81548160ff0219169083151502179055505050039050336005600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fecc279af01ecc1616810552807a41a6dcbad8eb3a91a33626b2d35c9dfd5c2d58133604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1809250505098975050505050505050565b612e3f82826138cc565b5050565b6000612e4d613a3e565b60e0604051908101604052808a6002811115612e6557fe5b8152602001896005811115612e7657fe5b81526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff168152602001868152602001858152602001848152509050600060016002839080600181540180825580915050906001820390600052602060002090600502016000909192909190915060008201518160000160006101000a81548160ff02191690836002811115612f1b57fe5b021790555060208201518160000160016101000a81548160ff02191690836005811115612f4457fe5b021790555060408201518160000160026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506080820151816002015560a0820151816003015560c082015181600401555050039050336006600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600a60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550600060028111156130c257fe5b8a60028111156130ce57fe5b14156133a257600060058111156130e157fe5b8960058111156130ed57fe5b141561316157600b60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505090600182039060005260206000200160009091929091909150555061339d565b6001600581111561316e57fe5b89600581111561317a57fe5b14156131ee57600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505090600182039060005260206000200160009091929091909150555061339c565b600360058111156131fb57fe5b89600581111561320757fe5b141561327b57600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505090600182039060005260206000200160009091929091909150555061339b565b6004600581111561328857fe5b89600581111561329457fe5b141561330857600e60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505090600182039060005260206000200160009091929091909150555061339a565b60058081111561331457fe5b89600581111561332057fe5b141561339457600f60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550613399565b600080fd5b5b5b5b5b613630565b600160028111156133af57fe5b8a60028111156133bb57fe5b14156134e657600060058111156133ce57fe5b8960058111156133da57fe5b141561344e57601060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055506134e1565b6002600581111561345b57fe5b89600581111561346757fe5b14156134db57601160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150509060018203906000526020600020016000909192909190915055506134e0565b600080fd5b5b61362f565b6002808111156134f257fe5b8a60028111156134fe57fe5b1415613629576003600581111561351157fe5b89600581111561351d57fe5b141561359157601260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550613624565b6004600581111561359e57fe5b8960058111156135aa57fe5b141561361e57601360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819080600181540180825580915050906001820390600052602060002001600090919290919091505550613623565b600080fd5b5b61362e565b600080fd5b5b5b7f648ea8614c7f2c919bde3b01694291faae3d403522f45d971755f2ac0e2faa598133604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a18092505050979650505050505050565b60008082840190508381101515156136c257600080fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561370857600080fd5b61371d816018546136ab90919063ffffffff16565b60188190555061377581601660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546136ab90919063ffffffff16565b601660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415151561385f57600080fd5b8260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60006138c330338461294d565b60019050919050565b6138f1816014600085815260200190815260200160002061394390919063ffffffff16565b8073ffffffffffffffffffffffffffffffffffffffff167fd28f937e71e8a89ddbefb8937335b2ae03fb74ce63dd6a6f316724c5a7e6c3dc836040518082815260200191505060405180910390a25050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561397f57600080fd5b6139898282613822565b15151561399557600080fd5b60018260000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b61010060405190810160405280600081526020016000815260200160008152602001600081526020016000815260200160008152602001600060ff1681526020016000151581525090565b60e06040519081016040528060006002811115613a5757fe5b815260200160006005811115613a6957fe5b8152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600081526020016000815260200160008152509056fea165627a7a723058207d00040780529511a1ae166713fd3ecd1cafe3c2345e85ea29c2d56caac07e600029",
  "sourceMap": "60:1499:9:-;;;183:5:2;162:26;;;;;;;;;;;;;;;;;;;;562:36:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;635:2;605:32;;;;;;;;;;;;;;;;;;;;644:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;60:1499:9;8:9:-1;5:2;;;30:1;27;20:12;5:2;60:1499:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "60:1499:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3928:87:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3928:87:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3928:87:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1714:244;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1714:244:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1714:244:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;717:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;717:91:1;;;;;;;;;;;;;;;;;;;;;;;2027:142:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2027:142:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2027:142:10;;;;;;;;;;;;;;;;;2113:299:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2113:299:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2113:299:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;583:1518:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;583:1518:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;583:1518:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4122:87:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4122:87:1;;;;;;;;;;;;;;;;;;;;;;;;;;;2929:146:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2929:146:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2929:146:10;;;;;;;;;;;;;;;;;2490:323:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2490:323:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2490:323:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;922:86:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;922:86:2;;;;;;669:852:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;669:852:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;669:852:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3160:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3160:134:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3160:134:10;;;;;;;;;;;;;;;;;162:26:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;162:26:2;;;;;;;;;;;;;;;;;;;;;;;;;;;2330:636:8;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2330:636:8;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2330:636:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1589:124:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1589:124:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1589:124:10;;;;;;;;;;;;;;;;;846:106:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;846:106:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;846:106:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2694:148:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2694:148:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2694:148:10;;;;;;;;;;;;;;;;;3516:136;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3516:136:10;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3516:136:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:134;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2475:134:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2475:134:10;;;;;;;;;;;;;;;;;828:86:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;828:86:2;;;;;;990:120:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;990:120:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;990:120:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:91;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4023:91:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;4023:91:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1454:122:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1454:122:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1454:122:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2887:333:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2887:333:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2887:333:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3372:136:10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3372:136:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3372:136:10;;;;;;;;;;;;;;;;;1435:140:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1435:140:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1435:140:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1800::10;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1800:140:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1800:140:10;;;;;;;;;;;;;;;;;2256:132;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2256:132:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2256:132:10;;;;;;;;;;;;;;;;;88:31:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;88:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1612:155:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1612:155:7;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1612:155:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1227:131:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1227:131:1;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1227:131:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2027:47:3;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2027:47:3;;;;;;;;;;;;;;;;;;;;;;;212:854:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;212:854:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;212:854:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;346:280:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;346:280:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;346:280:2;;;;;;;;;;;;;;;;;;;;;;3928:87:1;3965:13;3998:9;3991:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3928:87;:::o;1714:244::-;1779:4;1823:1;1804:21;;:7;:21;;;;1796:30;;;;;;;;1871:5;1839:8;:20;1848:10;1839:20;;;;;;;;;;;;;;;:29;1860:7;1839:29;;;;;;;;;;;;;;;:37;;;;1913:7;1892:36;;1901:10;1892:36;;;1922:5;1892:36;;;;;;;;;;;;;;;;;;1946:4;1939:11;;1714:244;;;;:::o;717:91::-;761:7;788:12;;781:19;;717:91;:::o;2027:142:10:-;2088:16;2124:25;:37;2150:10;2124:37;;;;;;;;;;;;;;;2117:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2027:142;:::o;2113:299:1:-;2192:4;2238:37;2269:5;2238:8;:14;2247:4;2238:14;;;;;;;;;;;;;;;:26;2253:10;2238:26;;;;;;;;;;;;;;;;:30;;:37;;;;:::i;:::-;2209:8;:14;2218:4;2209:14;;;;;;;;;;;;;;;:26;2224:10;2209:26;;;;;;;;;;;;;;;:66;;;;2286:26;2296:4;2302:2;2306:5;2286:9;:26::i;:::-;2343:10;2328:54;;2337:4;2328:54;;;2355:8;:14;2364:4;2355:14;;;;;;;;;;;;;;;:26;2370:10;2355:26;;;;;;;;;;;;;;;;2328:54;;;;;;;;;;;;;;;;;;2400:4;2393:11;;2113:299;;;;;:::o;583:1518:8:-;772:7;833:16;916:13;2072:2:3;860:14:8;852:23;;:53;:78;833:97;;941:20;980:3;975:2;964:8;:13;:19;;;;;;;;941:42;;995:19;1053:3;1048:2;1032:13;1017:12;:28;;;;;;;;:33;:39;;;;;;;;995:61;;1103:14;1120:37;1148:8;1120:27;:37::i;:::-;1103:54;;1168:58;1213:12;1202:8;:23;1168:33;:58::i;:::-;;1242:9;1239:853;;;1301:19;1323:249;1355:12;1387:1;1407:11;1437:13;1469:1;1489:10;1518:14;1552:5;1323:13;:249::i;:::-;1301:271;;1631:38;1645:11;1658:10;1631:13;:38::i;:::-;1720:20;1743:263;1776:20;1816:22;1866:4;1891:10;1920:11;1950:12;1981:10;1743:14;:263::i;:::-;1720:286;;2028:12;2021:19;;;;;;;;;;1239:853;2072:8;;;583:1518;;;;;;:::o;4122:87:1:-;4163:5;4188:13;;;;;;;;;;;4181:20;;4122:87;:::o;2929:146:10:-;2992:16;3028:27;:39;3056:10;3028:39;;;;;;;;;;;;;;;3021:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2929:146;:::o;2490:323:1:-;2570:4;2614:1;2595:21;;:7;:21;;;;2587:30;;;;;;;;2662:45;2696:10;2662:8;:20;2671:10;2662:20;;;;;;;;;;;;;;;:29;2683:7;2662:29;;;;;;;;;;;;;;;;:33;;:45;;;;:::i;:::-;2630:8;:20;2639:10;2630:20;;;;;;;;;;;;;;;:29;2651:7;2630:29;;;;;;;;;;;;;;;:77;;;;2744:7;2723:60;;2732:10;2723:60;;;2753:8;:20;2762:10;2753:20;;;;;;;;;;;;;;;:29;2774:7;2753:29;;;;;;;;;;;;;;;;2723:60;;;;;;;;;;;;;;;;;;2801:4;2794:11;;2490:323;;;;:::o;922:86:2:-;255:16;;;;;;;;;;;241:30;;:10;:30;;;233:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:6;;;;;;;;;;;770:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;995:5;986:6;;:14;;;;;;;;;;;;;;;;;;922:86::o;669:852:10:-;817:13;880:14;937:7;986;1038;1097;1143;773:10;1076::7;1041:45;;:19;:31;1061:10;1041:31;;;;;;;;;;;;;;;;;;;;;:45;;;1033:54;;;;;;;;1222:8:10;1231:10;1222:20;;;;;;;;;;;;;;;;;;;;:26;;;;;;;;;;;;1264:8;1273:10;1264:20;;;;;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;1307:8;1316:10;1307:20;;;;;;;;;;;;;;;;;;;;:23;;;;;;;;;;;;1346:8;1355:10;1346:20;;;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;1386:8;1395:10;1386:20;;;;;;;;;;;;;;;;;;;;:29;;;1430:8;1439:10;1430:20;;;;;;;;;;;;;;;;;;;;:26;;;1472:8;1481:10;1472:20;;;;;;;;;;;;;;;;;;;;:30;;;1200:313;;;;;;;;;;;;;;669:852;;;;;;;;;;:::o;3160:134::-;3217:16;3253:21;:33;3275:10;3253:33;;;;;;;;;;;;;;;3246:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3160:134;:::o;162:26:2:-;;;;;;;;;;;;;:::o;2330:636:8:-;2444:7;2466;2488;2510;2532;2554;2576:5;2596:4;2628:20;;:::i;:::-;2651:7;2659:9;2651:18;;;;;;;;;;;;;;;;;;;;2628:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2702:6;:19;;;2736:6;:16;;;2767:6;:18;;;2800:6;:19;;;2834:6;:19;;;2868:6;:16;;;2899:6;:20;;;2934:6;:13;;;2680:278;;;;;;;;;;;;;;;;;2330:636;;;;;;;;;:::o;1589:124:10:-;1641:16;1677;:28;1694:10;1677:28;;;;;;;;;;;;;;;1670:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1589:124;:::o;846:106:1:-;901:7;928:9;:16;938:5;928:16;;;;;;;;;;;;;;;;921:23;;846:106;;;:::o;2694:148:10:-;2758:16;2794:28;:40;2823:10;2794:40;;;;;;;;;;;;;;;2787:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2694:148;:::o;3516:136::-;3589:4;255:16:2;;;;;;;;;;;241:30;;:10;:30;;;233:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3607:15:10;3612:2;3616:5;3607:4;:15::i;:::-;3640:4;3633:11;;3516:136;;;;:::o;2475:134::-;2532:16;2568:21;:33;2590:10;2568:33;;;;;;;;;;;;;;;2561:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:134;:::o;828:86:2:-;255:16;;;;;;;;;;;241:30;;:10;:30;;;233:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;683:6;;;;;;;;;;;682:7;674:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;902:4;893:6;;:13;;;;;;;;;;;;;;;;;;828:86::o;990:120:1:-;1052:7;1079:16;:23;1096:5;1079:23;;;;;;;;;;;;;;;;1072:30;;990:120;;;:::o;4023:91::-;4062:13;4095:11;4088:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4023:91;:::o;1454:122:7:-;1519:4;1543:7;1551:9;1543:18;;;;;;;;;;;;;;;;;;;;:25;;;;;;;;;;;;1536:32;;1454:122;;;:::o;2887:333:1:-;2972:4;3016:1;2997:21;;:7;:21;;;;2989:30;;;;;;;;3064:50;3098:15;3064:8;:20;3073:10;3064:20;;;;;;;;;;;;;;;:29;3085:7;3064:29;;;;;;;;;;;;;;;;:33;;:50;;;;:::i;:::-;3032:8;:20;3041:10;3032:20;;;;;;;;;;;;;;;:29;3053:7;3032:29;;;;;;;;;;;;;;;:82;;;;3151:7;3130:60;;3139:10;3130:60;;;3160:8;:20;3169:10;3160:20;;;;;;;;;;;;;;;:29;3181:7;3160:29;;;;;;;;;;;;;;;;3130:60;;;;;;;;;;;;;;;;;;3208:4;3201:11;;2887:333;;;;:::o;3372:136:10:-;3430:16;3466:22;:34;3489:10;3466:34;;;;;;;;;;;;;;;3459:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3372:136;:::o;1435:140:1:-;1496:4;1513:32;1523:10;1535:2;1539:5;1513:9;:32::i;:::-;1563:4;1556:11;;1435:140;;;;:::o;1800::10:-;1860:16;1896:24;:36;1921:10;1896:36;;;;;;;;;;;;;;;1889:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1800:140;:::o;2256:132::-;2312:16;2348:20;:32;2369:10;2348:32;;;;;;;;;;;;;;;2341:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2256:132;:::o;88:31:2:-;;;;;;;;;;;;;:::o;1612:155:7:-;1695:4;1719:40;1750:8;1719:15;:26;1735:9;1719:26;;;;;;;;;;;:30;;:40;;;;:::i;:::-;1712:47;;1612:155;;;;:::o;1227:131:1:-;1299:7;1326:8;:15;1335:5;1326:15;;;;;;;;;;;;;;;:24;1342:7;1326:24;;;;;;;;;;;;;;;;1319:31;;1227:131;;;;:::o;2027:47:3:-;2072:2;2027:47;:::o;212:854:9:-;271:7;359:14;376:60;405:7;413:9;405:18;;;;;;;;;;;;;;;;;;;;:30;;;376:28;:60::i;:::-;359:77;;452:9;449:604;;;514:7;522:9;514:18;;;;;;;;;;;;;;;;;;;;:31;;;:33;;;;;;;;;;;;;595:20;618:270;651:20;690:23;732:10;769:4;793:9;821:7;829:9;821:18;;;;;;;;;;;;;;;;;;;;:30;;;870:3;618:14;:270::i;:::-;595:293;;908:57;923:9;934:7;942:9;934:18;;;;;;;;;;;;;;;;;;;;:30;;;908:57;;;;;;;;;;;;;;;;;;;;;;;;989:12;982:19;;;;;;449:604;1033:8;;;212:854;;;;:::o;346:280:2:-;255:16;;;;;;;;;;;241:30;;:10;:30;;;233:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;554:1;522:34;;:20;:34;;;;514:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:20;579:16;;:39;;;;;;;;;;;;;;;;;;346:280;:::o;1205:145:13:-;1263:7;1295:1;1290;:6;;1282:15;;;;;;;;1307:9;1323:1;1319;:5;1307:17;;1342:1;1335:8;;;1205:145;;;;:::o;3570:348:1:-;3672:1;3658:16;;:2;:16;;;;3650:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3723:26;3743:5;3723:9;:15;3733:4;3723:15;;;;;;;;;;;;;;;;:19;;:26;;;;:::i;:::-;3705:9;:15;3715:4;3705:15;;;;;;;;;;;;;;;:44;;;;3776:24;3794:5;3776:9;:13;3786:2;3776:13;;;;;;;;;;;;;;;;:17;;:24;;;;:::i;:::-;3760:9;:13;3770:2;3760:13;;;;;;;;;;;;;;;:40;;;;3836:33;3863:5;3836:16;:22;3853:4;3836:22;;;;;;;;;;;;;;;;:26;;:33;;;;:::i;:::-;3811:16;:22;3828:4;3811:22;;;;;;;;;;;;;;;:58;;;;3900:2;3885:25;;3894:4;3885:25;;;3904:5;3885:25;;;;;;;;;;;;;;;;;;3570:348;;;:::o;3734:162:10:-;3805:4;3822:44;3832:10;3852:4;3859:6;3822:9;:44::i;:::-;3884:4;3877:11;;3734:162;;;:::o;3934:174::-;4011:4;4028:50;4046:4;4053:16;;;;;;;;;;;4071:6;4028:9;:50::i;:::-;4096:4;4089:11;;3934:174;;;:::o;4643:966:3:-;4983:7;5008:21;;:::i;:::-;5032:366;;;;;;;;;5068:13;5032:366;;;;5107:10;5032:366;;;;5145:12;5032:366;;;;5186:13;5032:366;;;;5228:13;5032:366;;;;5267:10;5032:366;;;;5307:14;5032:366;;;;;;5344:7;5032:366;;;;;5008:390;;5411:19;5457:1;5433:7;5446;5433:21;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;5433:21:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:25;5411:47;;5505:10;5471:18;:31;5490:11;5471:31;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;5533:37;5546:11;5559:10;5533:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;5590:11;5583:18;;;;4643:966;;;;;;;;;;:::o;1775:123:7:-;1855:35;1870:9;1881:8;1855:14;:35::i;:::-;1775:123;;:::o;6245:2530:3:-;6547:7;6572:23;;:::i;:::-;6598:255;;;;;;;;;6633:6;6598:255;;;;;;;;;;;;6666:7;6598:255;;;;;;;;;;;;6700:3;6598:255;;;;;;6730:5;6598:255;;;;;;6762:9;6598:255;;;;6798:6;6598:255;;;;6831:10;6598:255;;;6572:281;;6864:20;6913:1;6887:8;6901;6887:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6887:23:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:27;6864:50;;6961:10;6925:19;:33;6945:12;6925:33;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;6984:16;:28;7001:10;6984:28;;;;;;;;;;;;;;;7018:12;6984:47;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;6984:47:3;;;;;;;;;;;;;;;;;;;;;;7086:20;7076:30;;;;;;;;:6;:30;;;;;;;;;7073:1608;;;7137:22;7126:33;;;;;;;;:7;:33;;;;;;;;;7123:694;;;7180:24;:36;7205:10;7180:36;;;;;;;;;;;;;;;7222:12;7180:55;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;7180:55:3;;;;;;;;;;;;;;;;;;;;;;7123:694;;;7270:23;7259:34;;;;;;;;:7;:34;;;;;;;;;7256:561;;;7314:25;:37;7340:10;7314:37;;;;;;;;;;;;;;;7357:12;7314:56;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;7314:56:3;;;;;;;;;;;;;;;;;;;;;;7256:561;;;7405:18;7394:29;;;;;;;;:7;:29;;;;;;;;;7391:426;;;7444:20;:32;7465:10;7444:32;;;;;;;;;;;;;;;7482:12;7444:51;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;7444:51:3;;;;;;;;;;;;;;;;;;;;;;7391:426;;;7530:19;7519:30;;;;;;;;:7;:30;;;;;;;;;7516:301;;;7570:21;:33;7592:10;7570:33;;;;;;;;;;;;;;;7609:12;7570:52;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;7570:52:3;;;;;;;;;;;;;;;;;;;;;;7516:301;;;7657:21;7646:32;;;;;;;;:7;:32;;;;;;;;;7643:174;;;7699:23;:35;7723:10;7699:35;;;;;;;;;;;;;;;7740:12;7699:54;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;7699:54:3;;;;;;;;;;;;;;;;;;;;;;7643:174;;;7793:8;;;7643:174;7516:301;7391:426;7256:561;7123:694;7073:1608;;;7882:24;7872:34;;;;;;;;:6;:34;;;;;;;;;7869:812;;;7936:22;7925:33;;;;;;;;:7;:33;;;;;;;;;7922:315;;;7979:28;:40;8008:10;7979:40;;;;;;;;;;;;;;;8025:12;7979:59;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;7979:59:3;;;;;;;;;;;;;;;;;;;;;;7922:315;;;8073:21;8062:32;;;;;;;;:7;:32;;;;;;;;;8059:178;;;8115:27;:39;8143:10;8115:39;;;;;;;;;;;;;;;8160:12;8115:58;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;8115:58:3;;;;;;;;;;;;;;;;;;;;;;8059:178;;;8213:8;;;8059:178;7922:315;7869:812;;;8295:21;8285:31;;;;;;;;:6;:31;;;;;;;;;8282:399;;;8347:18;8336:29;;;;;;;;:7;:29;;;;;;;;;8333:297;;;8386:21;:33;8408:10;8386:33;;;;;;;;;;;;;;;8425:12;8386:52;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;8386:52:3;;;;;;;;;;;;;;;;;;;;;;8333:297;;;8473:19;8462:30;;;;;;;;:7;:30;;;;;;;;;8459:171;;;8513:22;:34;8536:10;8513:34;;;;;;;;;;;;;;;8553:12;8513:53;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;8513:53:3;;;;;;;;;;;;;;;;;;;;;;8459:171;;;8606:8;;;8459:171;8333:297;8282:399;;;8661:8;;;8282:399;7869:812;7073:1608;8698:39;8712:12;8726:10;8698:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;8755:12;8748:19;;;;6245:2530;;;;;;;;;:::o;1431:145:13:-;1489:7;1508:9;1524:1;1520;:5;1508:17;;1548:1;1543;:6;;1535:15;;;;;;;;1568:1;1561:8;;;1431:145;;;;:::o;3261:268:1:-;3354:1;3335:21;;:7;:21;;;;3327:30;;;;;;;;3385:23;3402:5;3385:12;;:16;;:23;;;;:::i;:::-;3370:12;:38;;;;3440:29;3463:5;3440:9;:18;3450:7;3440:18;;;;;;;;;;;;;;;;:22;;:29;;;;:::i;:::-;3419:9;:18;3429:7;3419:18;;;;;;;;;;;;;;;:50;;;;3506:7;3485:36;;3502:1;3485:36;;;3515:5;3485:36;;;;;;;;;;;;;;;;;;3261:268;;:::o;786:162:12:-;858:4;901:1;882:21;;:7;:21;;;;874:30;;;;;;;;921:4;:11;;:20;933:7;921:20;;;;;;;;;;;;;;;;;;;;;;;;;914:27;;786:162;;;;:::o;4142:163:10:-;4214:4;4231:44;4249:4;4256:10;4268:6;4231:9;:44::i;:::-;4293:4;4286:11;;4142:163;;;:::o;2045:176:7:-;2126:40;2157:8;2126:15;:26;2142:9;2126:26;;;;;;;;;;;:30;;:40;;;;:::i;:::-;2204:8;2182:31;;;2193:9;2182:31;;;;;;;;;;;;;;;;;;2045:176;;:::o;259:181:12:-;354:1;335:21;;:7;:21;;;;327:30;;;;;;;;376:18;380:4;386:7;376:3;:18::i;:::-;375:19;367:28;;;;;;;;429:4;406;:11;;:20;418:7;406:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;259:181;;:::o;60:1499:9:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"./SurveyRequest.sol\";\r\n\r\ncontract SurveyResponse is SurveyRequest {\r\n    /** @dev 설문 응답 이벤트 */\r\n    event ResponseSurvey(uint256 surveyId, uint256 reward);\r\n\r\n    function responseSurvey(uint256 _surveyId) public returns (uint256) {\r\n\r\n        // 응답 보상 지불 시도\r\n        // 기부 시도\r\n        bool isSuccess = _transferTokenFromThisToUser(surveys[_surveyId].rewardPrice);\r\n\r\n        if(isSuccess) {\r\n            // 응답인원 추가\r\n            surveys[_surveyId].currentCount++;\r\n            // 영수증 발급\r\n            uint256 newReceiptId = _createReceipt(\r\n                ReceiptTitles.Survey,\r\n                ReceiptMethods.Response,\r\n                msg.sender,\r\n                address(this),\r\n                _surveyId,\r\n                surveys[_surveyId].rewardPrice,\r\n                now\r\n            );\r\n            emit ResponseSurvey(_surveyId, surveys[_surveyId].rewardPrice);\r\n\r\n            return newReceiptId;\r\n        }else {\r\n            revert();\r\n        }\r\n    \r\n    }\r\n\r\n    // // 설문 응답 리스트 반환\r\n    // function getSurveyResponseList() public returns (uint256[] memory) {\r\n    //     uint256[] memory resultList;\r\n    //     uint256[] memory receiptIndexList = getSurveyResponseReceiptList();\r\n    //     tempList = resultList;\r\n    //     for(uint i = 0 ; i < surveyResponseReceiptList[msg.sender].length ; i++) {\r\n    //         tempList.push(receipts[receiptIndexList[i]].objectId);\r\n    //     }\r\n    //     return tempList;\r\n    // }\r\n\r\n}",
  "sourcePath": "/mnt/c/workspace/inosurvey-ethereum/contracts/SurveyResponse.sol",
  "ast": {
    "absolutePath": "/mnt/c/workspace/inosurvey-ethereum/contracts/SurveyResponse.sol",
    "exportedSymbols": {
      "SurveyResponse": [
        1915
      ]
    },
    "id": 1916,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1845,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/mnt/c/workspace/inosurvey-ethereum/contracts/SurveyRequest.sol",
        "file": "./SurveyRequest.sol",
        "id": 1846,
        "nodeType": "ImportDirective",
        "scope": 1916,
        "sourceUnit": 1844,
        "src": "27:29:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1847,
              "name": "SurveyRequest",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1843,
              "src": "87:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SurveyRequest_$1843",
                "typeString": "contract SurveyRequest"
              }
            },
            "id": 1848,
            "nodeType": "InheritanceSpecifier",
            "src": "87:13:9"
          }
        ],
        "contractDependencies": [
          465,
          549,
          1093,
          1690,
          1843,
          2180,
          2597
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1915,
        "linearizedBaseContracts": [
          1915,
          1843,
          2180,
          465,
          2597,
          1690,
          1093,
          549
        ],
        "name": "SurveyResponse",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev 설문 응답 이벤트 ",
            "id": 1854,
            "name": "ResponseSurvey",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1850,
                  "indexed": false,
                  "name": "surveyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1854,
                  "src": "170:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "170:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1852,
                  "indexed": false,
                  "name": "reward",
                  "nodeType": "VariableDeclaration",
                  "scope": 1854,
                  "src": "188:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "188:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "169:34:9"
            },
            "src": "149:55:9"
          },
          {
            "body": {
              "id": 1913,
              "nodeType": "Block",
              "src": "280:786:9",
              "statements": [
                {
                  "assignments": [
                    1862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1862,
                      "name": "isSuccess",
                      "nodeType": "VariableDeclaration",
                      "scope": 1913,
                      "src": "359:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1861,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "359:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1869,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1864,
                            "name": "surveys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 641,
                            "src": "405:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Survey_$595_storage_$dyn_storage",
                              "typeString": "struct SurveyBase.Survey storage ref[] storage ref"
                            }
                          },
                          "id": 1866,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1865,
                            "name": "_surveyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1856,
                            "src": "413:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "405:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Survey_$595_storage",
                            "typeString": "struct SurveyBase.Survey storage ref"
                          }
                        },
                        "id": 1867,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 584,
                        "src": "405:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1863,
                      "name": "_transferTokenFromThisToUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2159,
                      "src": "376:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 1868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "376:60:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "359:77:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1870,
                    "name": "isSuccess",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1862,
                    "src": "452:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1911,
                    "nodeType": "Block",
                    "src": "1018:35:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1908,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2617,
                              2618
                            ],
                            "referencedDeclaration": 2617,
                            "src": "1033:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1033:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1910,
                        "nodeType": "ExpressionStatement",
                        "src": "1033:8:9"
                      }
                    ]
                  },
                  "id": 1912,
                  "nodeType": "IfStatement",
                  "src": "449:604:9",
                  "trueBody": {
                    "id": 1907,
                    "nodeType": "Block",
                    "src": "463:550:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "514:33:9",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1871,
                                "name": "surveys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 641,
                                "src": "514:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Survey_$595_storage_$dyn_storage",
                                  "typeString": "struct SurveyBase.Survey storage ref[] storage ref"
                                }
                              },
                              "id": 1873,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1872,
                                "name": "_surveyId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1856,
                                "src": "522:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "514:18:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Survey_$595_storage",
                                "typeString": "struct SurveyBase.Survey storage ref"
                              }
                            },
                            "id": 1874,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "currentCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 588,
                            "src": "514:31:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1876,
                        "nodeType": "ExpressionStatement",
                        "src": "514:33:9"
                      },
                      {
                        "assignments": [
                          1878
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1878,
                            "name": "newReceiptId",
                            "nodeType": "VariableDeclaration",
                            "scope": 1907,
                            "src": "595:20:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1877,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "595:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1896,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1880,
                                "name": "ReceiptTitles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 631,
                                "src": "651:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ReceiptTitles_$631_$",
                                  "typeString": "type(enum SurveyBase.ReceiptTitles)"
                                }
                              },
                              "id": 1881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Survey",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "651:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ReceiptTitles_$631",
                                "typeString": "enum SurveyBase.ReceiptTitles"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1882,
                                "name": "ReceiptMethods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 638,
                                "src": "690:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ReceiptMethods_$638_$",
                                  "typeString": "type(enum SurveyBase.ReceiptMethods)"
                                }
                              },
                              "id": 1883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Response",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "690:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ReceiptMethods_$638",
                                "typeString": "enum SurveyBase.ReceiptMethods"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1884,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2612,
                                "src": "732:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "732:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1887,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2645,
                                  "src": "769:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SurveyResponse_$1915",
                                    "typeString": "contract SurveyResponse"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SurveyResponse_$1915",
                                    "typeString": "contract SurveyResponse"
                                  }
                                ],
                                "id": 1886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "761:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 1888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "761:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1889,
                              "name": "_surveyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1856,
                              "src": "793:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1890,
                                  "name": "surveys",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 641,
                                  "src": "821:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Survey_$595_storage_$dyn_storage",
                                    "typeString": "struct SurveyBase.Survey storage ref[] storage ref"
                                  }
                                },
                                "id": 1892,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1891,
                                  "name": "_surveyId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1856,
                                  "src": "829:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "821:18:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Survey_$595_storage",
                                  "typeString": "struct SurveyBase.Survey storage ref"
                                }
                              },
                              "id": 1893,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 584,
                              "src": "821:30:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1894,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2614,
                              "src": "870:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ReceiptTitles_$631",
                                "typeString": "enum SurveyBase.ReceiptTitles"
                              },
                              {
                                "typeIdentifier": "t_enum$_ReceiptMethods_$638",
                                "typeString": "enum SurveyBase.ReceiptMethods"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1879,
                            "name": "_createReceipt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1004,
                            "src": "618:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_ReceiptTitles_$631_$_t_enum$_ReceiptMethods_$638_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (enum SurveyBase.ReceiptTitles,enum SurveyBase.ReceiptMethods,address,address,uint256,uint256,uint256) returns (uint256)"
                            }
                          },
                          "id": 1895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "618:270:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "595:293:9"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1898,
                              "name": "_surveyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1856,
                              "src": "923:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1899,
                                  "name": "surveys",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 641,
                                  "src": "934:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Survey_$595_storage_$dyn_storage",
                                    "typeString": "struct SurveyBase.Survey storage ref[] storage ref"
                                  }
                                },
                                "id": 1901,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1900,
                                  "name": "_surveyId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1856,
                                  "src": "942:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "934:18:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Survey_$595_storage",
                                  "typeString": "struct SurveyBase.Survey storage ref"
                                }
                              },
                              "id": 1902,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 584,
                              "src": "934:30:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1897,
                            "name": "ResponseSurvey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1854,
                            "src": "908:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "908:57:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1904,
                        "nodeType": "EmitStatement",
                        "src": "903:62:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1905,
                          "name": "newReceiptId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1878,
                          "src": "989:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1860,
                        "id": 1906,
                        "nodeType": "Return",
                        "src": "982:19:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "responseSurvey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1856,
                  "name": "_surveyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1914,
                  "src": "236:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "236:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "235:19:9"
            },
            "returnParameters": {
              "id": 1860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1859,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1914,
                  "src": "271:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "271:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "270:9:9"
            },
            "scope": 1915,
            "src": "212:854:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1916,
        "src": "60:1499:9"
      }
    ],
    "src": "0:1559:9"
  },
  "legacyAST": {
    "absolutePath": "/mnt/c/workspace/inosurvey-ethereum/contracts/SurveyResponse.sol",
    "exportedSymbols": {
      "SurveyResponse": [
        1915
      ]
    },
    "id": 1916,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1845,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:9"
      },
      {
        "absolutePath": "/mnt/c/workspace/inosurvey-ethereum/contracts/SurveyRequest.sol",
        "file": "./SurveyRequest.sol",
        "id": 1846,
        "nodeType": "ImportDirective",
        "scope": 1916,
        "sourceUnit": 1844,
        "src": "27:29:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1847,
              "name": "SurveyRequest",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1843,
              "src": "87:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SurveyRequest_$1843",
                "typeString": "contract SurveyRequest"
              }
            },
            "id": 1848,
            "nodeType": "InheritanceSpecifier",
            "src": "87:13:9"
          }
        ],
        "contractDependencies": [
          465,
          549,
          1093,
          1690,
          1843,
          2180,
          2597
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1915,
        "linearizedBaseContracts": [
          1915,
          1843,
          2180,
          465,
          2597,
          1690,
          1093,
          549
        ],
        "name": "SurveyResponse",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": "@dev 설문 응답 이벤트 ",
            "id": 1854,
            "name": "ResponseSurvey",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1853,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1850,
                  "indexed": false,
                  "name": "surveyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1854,
                  "src": "170:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "170:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1852,
                  "indexed": false,
                  "name": "reward",
                  "nodeType": "VariableDeclaration",
                  "scope": 1854,
                  "src": "188:14:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "188:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "169:34:9"
            },
            "src": "149:55:9"
          },
          {
            "body": {
              "id": 1913,
              "nodeType": "Block",
              "src": "280:786:9",
              "statements": [
                {
                  "assignments": [
                    1862
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1862,
                      "name": "isSuccess",
                      "nodeType": "VariableDeclaration",
                      "scope": 1913,
                      "src": "359:14:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1861,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "359:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1869,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 1864,
                            "name": "surveys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 641,
                            "src": "405:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Survey_$595_storage_$dyn_storage",
                              "typeString": "struct SurveyBase.Survey storage ref[] storage ref"
                            }
                          },
                          "id": 1866,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 1865,
                            "name": "_surveyId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1856,
                            "src": "413:9:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "405:18:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Survey_$595_storage",
                            "typeString": "struct SurveyBase.Survey storage ref"
                          }
                        },
                        "id": 1867,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "rewardPrice",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 584,
                        "src": "405:30:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1863,
                      "name": "_transferTokenFromThisToUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2159,
                      "src": "376:28:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) returns (bool)"
                      }
                    },
                    "id": 1868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "376:60:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "359:77:9"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 1870,
                    "name": "isSuccess",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1862,
                    "src": "452:9:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1911,
                    "nodeType": "Block",
                    "src": "1018:35:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1908,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2617,
                              2618
                            ],
                            "referencedDeclaration": 2617,
                            "src": "1033:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 1909,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1033:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1910,
                        "nodeType": "ExpressionStatement",
                        "src": "1033:8:9"
                      }
                    ]
                  },
                  "id": 1912,
                  "nodeType": "IfStatement",
                  "src": "449:604:9",
                  "trueBody": {
                    "id": 1907,
                    "nodeType": "Block",
                    "src": "463:550:9",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "514:33:9",
                          "subExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 1871,
                                "name": "surveys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 641,
                                "src": "514:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Survey_$595_storage_$dyn_storage",
                                  "typeString": "struct SurveyBase.Survey storage ref[] storage ref"
                                }
                              },
                              "id": 1873,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 1872,
                                "name": "_surveyId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1856,
                                "src": "522:9:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "514:18:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Survey_$595_storage",
                                "typeString": "struct SurveyBase.Survey storage ref"
                              }
                            },
                            "id": 1874,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "currentCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 588,
                            "src": "514:31:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1876,
                        "nodeType": "ExpressionStatement",
                        "src": "514:33:9"
                      },
                      {
                        "assignments": [
                          1878
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1878,
                            "name": "newReceiptId",
                            "nodeType": "VariableDeclaration",
                            "scope": 1907,
                            "src": "595:20:9",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1877,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "595:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 1896,
                        "initialValue": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1880,
                                "name": "ReceiptTitles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 631,
                                "src": "651:13:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ReceiptTitles_$631_$",
                                  "typeString": "type(enum SurveyBase.ReceiptTitles)"
                                }
                              },
                              "id": 1881,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Survey",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "651:20:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ReceiptTitles_$631",
                                "typeString": "enum SurveyBase.ReceiptTitles"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1882,
                                "name": "ReceiptMethods",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 638,
                                "src": "690:14:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ReceiptMethods_$638_$",
                                  "typeString": "type(enum SurveyBase.ReceiptMethods)"
                                }
                              },
                              "id": 1883,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Response",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "690:23:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ReceiptMethods_$638",
                                "typeString": "enum SurveyBase.ReceiptMethods"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 1884,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2612,
                                "src": "732:3:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "732:10:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 1887,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2645,
                                  "src": "769:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_SurveyResponse_$1915",
                                    "typeString": "contract SurveyResponse"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_SurveyResponse_$1915",
                                    "typeString": "contract SurveyResponse"
                                  }
                                ],
                                "id": 1886,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "761:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": "address"
                              },
                              "id": 1888,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "761:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1889,
                              "name": "_surveyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1856,
                              "src": "793:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1890,
                                  "name": "surveys",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 641,
                                  "src": "821:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Survey_$595_storage_$dyn_storage",
                                    "typeString": "struct SurveyBase.Survey storage ref[] storage ref"
                                  }
                                },
                                "id": 1892,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1891,
                                  "name": "_surveyId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1856,
                                  "src": "829:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "821:18:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Survey_$595_storage",
                                  "typeString": "struct SurveyBase.Survey storage ref"
                                }
                              },
                              "id": 1893,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 584,
                              "src": "821:30:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "id": 1894,
                              "name": "now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2614,
                              "src": "870:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_enum$_ReceiptTitles_$631",
                                "typeString": "enum SurveyBase.ReceiptTitles"
                              },
                              {
                                "typeIdentifier": "t_enum$_ReceiptMethods_$638",
                                "typeString": "enum SurveyBase.ReceiptMethods"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1879,
                            "name": "_createReceipt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1004,
                            "src": "618:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_enum$_ReceiptTitles_$631_$_t_enum$_ReceiptMethods_$638_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                              "typeString": "function (enum SurveyBase.ReceiptTitles,enum SurveyBase.ReceiptMethods,address,address,uint256,uint256,uint256) returns (uint256)"
                            }
                          },
                          "id": 1895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "618:270:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "595:293:9"
                      },
                      {
                        "eventCall": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 1898,
                              "name": "_surveyId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1856,
                              "src": "923:9:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1899,
                                  "name": "surveys",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 641,
                                  "src": "934:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Survey_$595_storage_$dyn_storage",
                                    "typeString": "struct SurveyBase.Survey storage ref[] storage ref"
                                  }
                                },
                                "id": 1901,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 1900,
                                  "name": "_surveyId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1856,
                                  "src": "942:9:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "934:18:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Survey_$595_storage",
                                  "typeString": "struct SurveyBase.Survey storage ref"
                                }
                              },
                              "id": 1902,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "rewardPrice",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 584,
                              "src": "934:30:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1897,
                            "name": "ResponseSurvey",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1854,
                            "src": "908:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (uint256,uint256)"
                            }
                          },
                          "id": 1903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "908:57:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1904,
                        "nodeType": "EmitStatement",
                        "src": "903:62:9"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 1905,
                          "name": "newReceiptId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1878,
                          "src": "989:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1860,
                        "id": 1906,
                        "nodeType": "Return",
                        "src": "982:19:9"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "id": 1914,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "responseSurvey",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1857,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1856,
                  "name": "_surveyId",
                  "nodeType": "VariableDeclaration",
                  "scope": 1914,
                  "src": "236:17:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1855,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "236:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "235:19:9"
            },
            "returnParameters": {
              "id": 1860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1859,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 1914,
                  "src": "271:7:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1858,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "271:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "270:9:9"
            },
            "scope": 1915,
            "src": "212:854:9",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 1916,
        "src": "60:1499:9"
      }
    ],
    "src": "0:1559:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.0+commit.1d4f565a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.9",
  "updatedAt": "2019-05-12T16:59:35.522Z",
  "devdoc": {
    "methods": {
      "getFoundationDonateReceiptList()": {
        "details": "내가 기부한 기부 영수증의 Index List 반환 (소모) "
      },
      "getFoundationRequestReceiptList()": {
        "details": "내가 등록한 기부 단체 영수증의 Index List 반환 "
      },
      "getOwnerReceiptList()": {
        "details": "모든 설문 영수증의 Index List 반환 "
      },
      "getProductBuyReceiptList()": {
        "details": "내가 구매한 상품 영수증의 상품 Index List 반환 "
      },
      "getProductSellReceiptList()": {
        "details": "내가 판매한 상품 영수증의 Index List 반환 "
      },
      "getReceiptDetail(uint256)": {
        "details": "Index에 해당하는 영수증 상세정보 반환\r",
        "params": {
          "_receiptId": "영수증 IndexId\r"
        },
        "return": "ReceiptTitle uint256 enum 인덱스 반환. 설문인지, 상품인지\rReceiptMethod uint256 enum 인덱스 반환, 요청, 구매 등..\rto address 누구에게\rfrom address 누구로부터\robjectId uint256 어떤 오브젝트를?\rtotal uint256 총 금액\rdate uint256 생성 날짜\r"
      },
      "getSurveyBuyReceiptList()": {
        "details": "내가 구매한 설문 영수증의 Index List 반환 (소모) "
      },
      "getSurveyRequestDetail(uint256)": {
        "details": "설문 조사 상세 정보 반환\r",
        "params": {
          "_surveyId": "블록체인 Sotrage에 저장된 설문 조사 인덱스\r"
        },
        "return": "A uint256 등록 설문 리스트의 DB primary key 반환 \r"
      },
      "getSurveyRequestReceiptList()": {
        "details": "내가 요청한 설문 영수증의 Index List 반환 (소모) "
      },
      "getSurveyResponseReceiptList()": {
        "details": "내가 응답한 설문 영수증의 Index List 반환 (적립) "
      },
      "getSurveySellReceiptList()": {
        "details": "내가 판매한 설문 영수증의 Index List 반환 (적립) "
      },
      "requestSurvey(uint256,uint256,uint8)": {
        "details": "create Survey(public)\r _CreateProduct() 실행함\r 설문 가격 계산 후 해당 금액 만큼의 토큰 전송을 시도\r 성공 시 스토리지에 등록\r 실패 시 false 리턴 \r",
        "params": {
          "_maximumCount": "설문 최대 응답 가능 인원 수.\r",
          "_questionCount": "설문 질문 개수.\r",
          "_startedAt": "설문 질문 개수.\r"
        },
        "return": "A bool 성공 여부 반환 \r"
      }
    }
  },
  "userdoc": {
    "methods": {
      "allowance(address,address)": {
        "notice": "토큰 소유자가 토큰 수신자에게 인출을 허락한 토큰이 얼마인지를 반환"
      },
      "approve(address,uint256)": {
        "notice": "송신자가 보유한 토큰에서 일정 금액 만큼의 토큰을 인출할 수 있는 권한을 수신자에게 부여"
      },
      "balanceOf(address)": {
        "notice": "토큰 소유 갯수"
      },
      "consumeBalanceOf(address)": {
        "notice": "토큰 소유 갯수"
      },
      "decreaseAllowance(address,uint256)": {
        "notice": "허가된 송신 금액중 원하는 금액만큼 감소"
      },
      "increaseAllowance(address,uint256)": {
        "notice": "허가된 송신 금액중 원하는 금액만큼 추가"
      },
      "isSurveyToBuyer(uint256,address)": {
        "notice": "*  SURVEY ROLE **"
      },
      "totalSupply()": {
        "notice": "토큰 총 발행량"
      },
      "transfer(address,uint256)": {
        "notice": "송신자 계정에서 수신자 계정에게 토큰 송신"
      },
      "transferFrom(address,address,uint256)": {
        "notice": "송신자 account에서 해당 금액 만큼의 토큰을 인출해서 수신자 어카운트로 해당 금액 만큼의 토큰을 송신"
      }
    }
  }
}